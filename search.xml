<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>悉达多.md</title>
      <link href="/2023/10/09/xi-da-duo/"/>
      <url>/2023/10/09/xi-da-duo/</url>
      
        <content type="html"><![CDATA[<p>今天看到曾经添加的读书群里分享的《悉达多》的读后感，然后就在帆书上找到了解说文，并花20多分钟通读了一遍。<br>悉达多属于贵族一列，生活优越，而且有高僧或者智者传导智慧给他，但是他不限于此，当遇到释迦摩尼时，虽然他的智慧很高深，但是悉达多却没有跟随他学习，而是自己去世俗中去顿悟。<br>一边流浪一边修行，跟随自己的本性，他喜欢上了一个红尘女子，为了她，他学会了如何追求财富，如何享乐，并成为了他曾经认为是儿童心智的人，直到有一天他决定离去，在一条河边与一个智者相遇。<br>在河边顿悟，然后作为摆渡人，在河边遇到了各种人，开始熙然接受。<br>故事还有另外一只线，就是他的朋友，作为僧人修行，经过几十年之后，苦修不得，得知河边有一个智者，而此人就是悉达多，这是巧合吗？感觉是作者的有意安排。<br>而且在河边他还遇到了他的妻子，还有他未曾谋面的儿子。儿子对他，以及对世俗的憎恨，没有接受悉达多的爱和教导走上了不归路。<br>感悟：知识是可以传授的，唯有智慧需要自己去领悟，而无法通过语言文字传授。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
            <tag> 智慧 </tag>
            
            <tag> 道 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于通勤时间</title>
      <link href="/2023/09/28/guan-yu-tong-qin-shi-jian/"/>
      <url>/2023/09/28/guan-yu-tong-qin-shi-jian/</url>
      
        <content type="html"><![CDATA[<p>因为家庭原因，现在的上班通勤方案有两个：</p><ul><li><strong>地铁</strong><br>骑电动车到1.5公里的地铁站，坐地铁11个站，站内转线再坐12个站，再转线坐4个站，到站步行600米，耗时1个小时40分钟。<ul><li>费用 单程9元，合计18元。</li><li>每月费用，18*22 &#x3D; 396</li></ul></li><li><strong>开车</strong><br>开车走高速，7点20之前出门，45分钟左右到公司。<ul><li>高速费16.15，电费算40*0.2 &#x3D; 8元，合计48.3元</li><li>每月费用，48.3*22 &#x3D; 1062.6+停车费300 &#x3D; 1362.6<br>从效率来看，第二种方案节约时间，但是每月多花966.6元；但是从成本考虑第一种更便宜；从安全考虑，地铁最优，而且坐地铁可以选择站着，并有走动，比起驾车可以避免久坐，更健康一些。<br>有幸国庆前，体验了4天坐地铁上下班，如果要做到不迟到，几乎需要7点钟就要出门，如果遇到下雨天，不是很方便。</li></ul></li></ul><p>第一种方式，1年节约通勤费：11599.2元。<br>第二种方式，1年节约通勤时间：528个小时。<br>这算下来，相当于花22元购买1个小时的时间。</p><p>关于通勤时间的利用<br>地铁，在地铁上有1个小时可以用来看书，不能用来听书，地铁运行期间太嘈杂；适合进行沉思。<br>驾车，可以利用40分钟时间听书，可能有安全隐患；不太适合深度思考问题。</p><p>如何抉择，权衡之下，决定选择地铁通勤。当然最好的办法是找一个离家近的公司。最最好的办法是早日实现财务自由。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些专用于nandflash的文件系统</title>
      <link href="/2023/09/27/na-xie-zhuan-yong-yu-nandflash-de-wen-jian-xi-tong/"/>
      <url>/2023/09/27/na-xie-zhuan-yong-yu-nandflash-de-wen-jian-xi-tong/</url>
      
        <content type="html"><![CDATA[<p>在嵌入式系统中，使用专门为NAND Flash设计的文件系统可以提高性能和稳定性。以下是一些常用于NAND Flash的专用文件系统：</p><h2 id="YAFFS-YAFFS2（Yet-Another-Flash-File-System）："><a href="#YAFFS-YAFFS2（Yet-Another-Flash-File-System）：" class="headerlink" title="YAFFS&#x2F;YAFFS2（Yet Another Flash File System）："></a>YAFFS&#x2F;YAFFS2（Yet Another Flash File System）：</h2><p>YAFFS是一个专为闪存设备（包括NAND Flash）设计的文件系统。它被广泛用于许多嵌入式系统中，并提供了对坏块管理、擦除计数等特性的支持。</p><h2 id="JFFS2（Journalling-Flash-File-System-2）："><a href="#JFFS2（Journalling-Flash-File-System-2）：" class="headerlink" title="JFFS2（Journalling Flash File System 2）："></a>JFFS2（Journalling Flash File System 2）：</h2><p>JFFS2是一个日志型的文件系统，专门为闪存设备设计，包括NAND Flash。它提供了高效的坏块管理和擦除次数均衡。</p><h2 id="UBIFS（UBI-File-System）："><a href="#UBIFS（UBI-File-System）：" class="headerlink" title="UBIFS（UBI File System）："></a>UBIFS（UBI File System）：</h2><p>UBIFS是一个专为联合闪存设备（UBI）设计的文件系统，UBI是一个闪存管理层，用于管理块和页的映射关系，它支持NAND Flash等设备。</p><h2 id="F2FS（Flash-Friendly-File-System）："><a href="#F2FS（Flash-Friendly-File-System）：" class="headerlink" title="F2FS（Flash-Friendly File System）："></a>F2FS（Flash-Friendly File System）：</h2><p>F2FS是一个专门为闪存设备设计的文件系统，它考虑了闪存的特性，如坏块处理、TRIM支持等，适用于NAND Flash等设备。</p><h2 id="LogFS："><a href="#LogFS：" class="headerlink" title="LogFS："></a>LogFS：</h2><p>LogFS是一个面向闪存的文件系统，旨在提供高性能和耐用性。它设计用于支持多个闪存芯片，包括NAND Flash。</p><h2 id="FTL（Flash-Translation-Layer）："><a href="#FTL（Flash-Translation-Layer）：" class="headerlink" title="FTL（Flash Translation Layer）："></a>FTL（Flash Translation Layer）：</h2><p>FTL并不是一个文件系统，而是一个适用于NAND Flash的抽象层，它将闪存块和页的概念映射到传统的块和扇区的概念，使得可以在上面运行常规文件系统。<br>这些文件系统中的许多都提供了对NAND Flash特性的专门支持，如坏块管理、TRIM支持等。选择一个适合的文件系统取决于你的具体需求、硬件支持和应用场景。在选择之前，务必详细了解每个文件系统的特性和使用条件。</p><h2 id="RT-Flashfs"><a href="#RT-Flashfs" class="headerlink" title="RT-Flashfs"></a>RT-Flashfs</h2><p>这是一个由ARM提供的用于嵌入式的系统的文件系统，以库的形式提供，在mdk-keil的中间件中包含。安装对应的middleware pack后，在keil5中可以配置使用。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件系统 </tag>
            
            <tag> nandflash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源操作系统和文件系统</title>
      <link href="/2023/09/27/kai-yuan-xiang-mu-he-ji/"/>
      <url>/2023/09/27/kai-yuan-xiang-mu-he-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="RTX5-CMSIS-RTX"><a href="#RTX5-CMSIS-RTX" class="headerlink" title="RTX5(CMSIS-RTX)"></a><a href="https://github.com/ARM-software/CMSIS-RTX">RTX5(CMSIS-RTX)</a></h2><p>RTX5 real time kernel for Arm Cortex-based embedded systems (spin-off from CMSIS_5)</p><h2 id="CMSIS-FreeRTOS"><a href="#CMSIS-FreeRTOS" class="headerlink" title="CMSIS-FreeRTOS"></a><a href="https://github.com/ARM-software/CMSIS-FreeRTOS">CMSIS-FreeRTOS</a></h2><p>FreeRTOS adaptation for CMSIS-RTOS Version 2</p><h2 id="freeRTOS"><a href="#freeRTOS" class="headerlink" title="freeRTOS"></a><a href="https://github.com/freeRTOS">freeRTOS</a></h2><h2 id="littlefs"><a href="#littlefs" class="headerlink" title="littlefs"></a><a href="https://github.com/littlefs-project/littlefs">littlefs</a></h2><h2 id="QT5"><a href="#QT5" class="headerlink" title="QT5"></a><a href="https://github.com/qt/qt5">QT5</a></h2><h2 id="Azure-RTOS-ThreadX全家桶"><a href="#Azure-RTOS-ThreadX全家桶" class="headerlink" title="Azure RTOS(ThreadX全家桶)"></a><a href="https://github.com/orgs/azure-rtos/repositories">Azure RTOS(ThreadX全家桶)</a></h2><h2 id="RT-thread"><a href="#RT-thread" class="headerlink" title="RT-thread"></a><a href="https://github.com/RT-Thread/rt-thread">RT-thread</a></h2><p>RT-Thread is an open source IoT real-time operating system (RTOS).</p><h2 id="uffs"><a href="#uffs" class="headerlink" title="uffs"></a><a href="https://github.com/rickyzheng/uffs">uffs</a></h2><p>UFFS - Ultra low cost Flash File System</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开源 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>情绪管理</title>
      <link href="/2023/09/25/qing-xu-guan-li/"/>
      <url>/2023/09/25/qing-xu-guan-li/</url>
      
        <content type="html"><![CDATA[<p>每个人都有情绪失控的时候，如果在情绪失控的时候能够觉知，那么就能很好的控制负面情绪。<br/></p><p>显然，能够随时按下暂停键，发现自己所处的状态，这个需要锻炼的。<br>&nbsp;</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 情绪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo在github和gitee上搭建个人博客</title>
      <link href="/2023/09/22/shi-yong-hexo-zai-github-he-gitee-shang-da-jian-ge-ren-bo-ke/"/>
      <url>/2023/09/22/shi-yong-hexo-zai-github-he-gitee-shang-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h2 id="1-hexo框架搭建"><a href="#1-hexo框架搭建" class="headerlink" title="1 hexo框架搭建"></a>1 hexo框架搭建</h2><h3 id="1-1-了解hexo"><a href="#1-1-了解hexo" class="headerlink" title="1.1 了解hexo"></a>1.1 了解hexo</h3><p>首先，介绍一下hexo,这是一个专门用于博客类网站的开源项目，类似于之前的wordpress。<br>hexo中文官网：<a href="https://hexo.io/zh-cn/">hexo.io</a> GitHub 地址  <a href="https://github.com/hexojs/hexo">https://github.com/hexojs/hexo</a></p><h3 id="1-2-hexo依赖环境Node-js的安装"><a href="#1-2-hexo依赖环境Node-js的安装" class="headerlink" title="1.2 hexo依赖环境Node.js的安装"></a>1.2 hexo依赖环境Node.js的安装</h3><p>Hexo 是使用 Node.js 开发的，所以我们安装 Hexo 之前需要先安装 Node.js 环境。<br><strong>下载Node.js</strong><br>Node.js 中文官网：<a href="https://nodejs.org/zh-cn">nodejs.org</a><br><strong>安装</strong><br>默认安装即可。<br>测试是否安装成功：<br>命令行输入，或git bash终端输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正常会输出版本号，我装的是10.1.0</p><h3 id="1-3-hexo依赖环境Git"><a href="#1-3-hexo依赖环境Git" class="headerlink" title="1.3 hexo依赖环境Git"></a>1.3 hexo依赖环境Git</h3><p>已安装，不再赘述，可参考网络文章自行安装，包括用户名及邮箱的配置，ssh公钥私钥的生成，及将公钥配置到github或者gittee.</p><h3 id="1-4-安装Hexo"><a href="#1-4-安装Hexo" class="headerlink" title="1.4 安装Hexo"></a>1.4 安装Hexo</h3><ol><li>本地磁盘新建一个文件夹，例如hexo.</li><li>进入hexo目录，gitbash进入此目录，输入以下命令：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#安装hexo框架</span><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span class="token comment">#初始化文件夹</span>hexo init<span class="token comment">#安装 hexo 依赖包</span><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>查看本地博客效果<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#生成静态网站</span>hexo g<span class="token comment">#启动服务器</span>hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>打开浏览器，输入<a href="http://localhost:4000/">http://localhost:4000</a> 显示博客主页。</li></ol><h3 id="1-5-更换Hexo博客主题"><a href="#1-5-更换Hexo博客主题" class="headerlink" title="1.5 更换Hexo博客主题"></a>1.5 更换Hexo博客主题</h3><ol><li>在github官网搜索hexo-theme</li><li>将喜欢的主题仓库clone到hexo&#x2F;themes下</li><li>修改hexo目录下_config.yml文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Extensions</span><span class="token comment">## Plugins: https://hexo.io/plugins/</span><span class="token comment">## Themes: https://hexo.io/themes/</span><span class="token comment">#theme: landscape</span><span class="token comment">#theme: butterfly</span>theme: matery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="2-在github上搭建"><a href="#2-在github上搭建" class="headerlink" title="2 在github上搭建"></a>2 在github上搭建</h2><h3 id="2-1-注册github"><a href="#2-1-注册github" class="headerlink" title="2.1 注册github"></a>2.1 注册github</h3><p>官网 github.com，速度比较慢。</p><h3 id="2-2-创建github-pages仓库"><a href="#2-2-创建github-pages仓库" class="headerlink" title="2.2 创建github pages仓库"></a>2.2 创建github pages仓库</h3><p>pages仓库也是一个普通的仓库，但是有个特别的地方需要注意<br>仓库：&lt;用户名&gt;.github.io<br>属性必须是public。<br>其他创建过程与创建普通仓库一样。</p><h3 id="2-3-测试github-pages页面"><a href="#2-3-测试github-pages页面" class="headerlink" title="2.3 测试github pages页面"></a>2.3 测试github pages页面</h3><ol><li>在仓库目录下创建一个index.html文件，内容如下<pre class="line-numbers language-none"><code class="language-none">&lt;h1&gt;hello my blog !&lt;&#x2F;h1&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>浏览器打开https:&#x2F;&#x2F;&lt;你的用户名&gt;.github.io,可以查看到hello my blog !字样，即说明github pages 仓库搭建成功。</li></ol><h3 id="2-4-github-pages发布"><a href="#2-4-github-pages发布" class="headerlink" title="2.4 github pages发布"></a>2.4 github pages发布</h3><h4 id="2-4-1-手动发布"><a href="#2-4-1-手动发布" class="headerlink" title="2.4.1 手动发布"></a>2.4.1 手动发布</h4><p>如果你是前端的开发人员，就可以直接将github远程仓库的代码跟本地关联</p><h4 id="2-4-2-hexo自动发布"><a href="#2-4-2-hexo自动发布" class="headerlink" title="2.4.2 hexo自动发布"></a>2.4.2 hexo自动发布</h4><p>利用hexo的发布插件，我们只需要修改markdown格式的文档，hexo将自动装换位静态网页。</p><ol><li>安装插件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>配置 hexo目录下_config.yml文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 其中 xxxxxx 是前面多次用到的你的GitHub用户名</span>deploy:  type: <span class="token function">git</span>  repo: git@github.com:xxxxxx/xxxxxx.github.io.git  branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>编写一篇文章<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"[文章名称]"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>会在hexo&#x2F;source&#x2F;_post&#x2F;目录下生成[文章名称].md。如果使用hexo的发布机制，需要学习markdown的几个简单语法，比如标题，代码块等等，还有很多高级功能需要自己去发现，学习，使用。</li><li>发布<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意最后变成d了，原来的s表示服务起在本地，现在的d表示部署在远端</span>hexo g <span class="token operator">&amp;&amp;</span> hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="3-在gitee上搭建"><a href="#3-在gitee上搭建" class="headerlink" title="3 在gitee上搭建"></a>3 在gitee上搭建</h2><h3 id="3-1-注册gitee账号"><a href="#3-1-注册gitee账号" class="headerlink" title="3.1 注册gitee账号"></a>3.1 注册gitee账号</h3><p>官网，<a href="https://gitee.com/%EF%BC%8C%E8%87%AA%E8%A1%8C%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7%EF%BC%8C">https://gitee.com/，自行注册账号，</a> 此处不赘述。</p><h3 id="3-2-创建gitee-pages-仓库"><a href="#3-2-创建gitee-pages-仓库" class="headerlink" title="3.2 创建gitee pages 仓库"></a>3.2 创建gitee pages 仓库</h3><ol><li>首先创建一个普通的仓库，创建一个空白仓库后，记得在创建页面添加readMe文件（这一点很重要，否则【服务】中没有gitee pages选项），然后选择服务中的gitee pages选项。这时你会发现需要你进行账号实名。</li><li>根据gitee要求上传实名验证的照片。</li><li>后续….等我实名认证了再更新…</li></ol><h2 id="4-修改主题"><a href="#4-修改主题" class="headerlink" title="4 修改主题"></a>4 修改主题</h2><h3 id="4-1-markdown的完美支持"><a href="#4-1-markdown的完美支持" class="headerlink" title="4.1 markdown的完美支持"></a>4.1 markdown的完美支持</h3><p>到这里，会发现使用markdown编写的文章，与注释相关的显示会不正常，此时就需要参考主题文件下的_config.yml文件提到的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 图表绘制插件</span><span class="token comment"># 建议更换更换hexo-renderer-markdown-it引擎。参考下面链接</span><span class="token comment"># https://github.com/hexojs/hexo-renderer-markdown-it</span><span class="token comment"># https://github.com/hexojs/hexo-renderer-markdown-it/wiki/Advanced-Configuration</span><span class="token comment"># 使用教程： https://blog.17lai.site/posts/cf0f47fd/#Mermaid</span><span class="token comment"># 安装配置方法</span><span class="token comment"># yarn remove hexo-renderer-marked</span><span class="token comment"># yarn add hexo-renderer-markdown-it hexo-tag-mermaid</span><span class="token comment"># 注意：hexo-renderer-markdown-it 比默认引擎更快，可选择插件较多，请认真看上面两个链接教程。</span><span class="token comment"># mermaid语法教程 https://mermaid-js.github.io/mermaid/#/</span><span class="token comment"># 使用方法：</span><span class="token comment"># 在post文章中填写mermaid语句，需要使用&#123;% mermaid %&#125; 包裹</span><span class="token comment"># &#123;% mermaid %&#125;</span><span class="token comment"># [mermaid 语句正文]</span><span class="token comment"># &#123;% endmermaid %&#125;</span><span class="token comment"># 样例如下所示：</span><span class="token comment"># &#123;% mermaid %&#125;</span><span class="token comment"># graph TD</span><span class="token comment">#     A[Christmas] -->|Get money| B(Go shopping)</span><span class="token comment">#     B --> C&#123;Let me think&#125;</span><span class="token comment">#     C -->|One| D[Laptop]</span><span class="token comment">#     C -->|Two| E[iPhone]</span><span class="token comment">#     C -->|Three| F[Car]</span><span class="token comment"># &#123;% endmermaid %&#125;</span><span class="token comment"># mermaid chart。 依赖hexo-tag-mermaid</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实我们有看懂上面的说明，那个使用教程说的很多，并没有解决所遇到的问题，但是找到了其他的办法：<br>修改hexo目录（非主题目录）下的_config.yml文件,将highlight enable设置为false，prismjs enable设置为true</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>  line_number: <span class="token boolean">true</span>  auto_detect: <span class="token boolean">false</span>  tab_replace: <span class="token string">''</span>  wrap: <span class="token boolean">true</span>  hljs: <span class="token boolean">false</span>prismjs:  enable: <span class="token boolean">true</span>  preprocess: <span class="token boolean">true</span>  line_number: <span class="token boolean">true</span>  tab_replace: <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果就是当前网页显示的效果,highlight.js 默认开启，用作 Hexo 的服务端高亮组件。如果你需要在浏览器端运行 highlight.js，请把它关闭。<br>PrismJS 默认禁用。启用 PrismJS 前应设置 highlight.enable 为 false。<br>Hexo 内建的 PrismJS 支持浏览器端高亮（preprocess 设置为 false）和服务器端高亮（preprocess 设置为 true）两种方式。<br>使用服务器端高亮时（preprocess 设置为 true），只需要在站点引入 Prismjs 的主题（CSS 样式表）即可；而使用浏览器端高亮时（preprocess 设置为 false），需要将 JavaScript 文件也引入。</p><p><a href="https://valine.js.org/quickstart.html">valine使用方法</a></p><h3 id="4-2-文章的属性设置"><a href="#4-2-文章的属性设置" class="headerlink" title="4.2 文章的属性设置"></a>4.2 文章的属性设置</h3><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><p>下面是例子<br>在线加密网站  选择SHA256  <a href="https://tool.oschina.net/encrypt?type=2">https://tool.oschina.net/encrypt?type=2</a></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 文件属性<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2023-09-25 16:53:56</span><span class="token key atrule">author</span><span class="token punctuation">:</span> liming<span class="token comment">#img: /source/images/test.jpg</span><span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /source/images/03.jpg<span class="token comment"># password: 1b0f671a4a0674a84c1177bcc590fc6641708DFS7791a6dc25bedc60eddc3b416(乱码不可用)</span><span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这篇文章需要输入密码，请联系作者<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-个人总结体会"><a href="#5-个人总结体会" class="headerlink" title="5 个人总结体会"></a>5 个人总结体会</h2><p>主题的配置主要参考主题的readMe文档，而博客网站的配置主要是hexo目录下的_config.yml文件的修改。</p><h2 id="6-参考-友情链接"><a href="#6-参考-友情链接" class="headerlink" title="6 参考(友情链接)"></a>6 参考(友情链接)</h2><p>因为文章主要是为了做一个记录，所以不是很详尽，如果有不明白处，可以联系本人，也可以访问<br><a href="https://yushuaige.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">半亩方塘-博客搭建</a></p><h2 id="加速访问"><a href="#加速访问" class="headerlink" title="加速访问"></a>加速访问</h2><p><a href="https://dash.cloudflare.com/login">cloudflare</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> gitee </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终于拥有自己的博客了</title>
      <link href="/2023/09/21/zhong-yu-yong-you-zi-ji-de-bo-ke-liao/"/>
      <url>/2023/09/21/zhong-yu-yong-you-zi-ji-de-bo-ke-liao/</url>
      
        <content type="html"><![CDATA[<h3 id="之前用过的写文的的平台"><a href="#之前用过的写文的的平台" class="headerlink" title="之前用过的写文的的平台"></a>之前用过的写文的的平台</h3><p>这么多年，在csdn,博客园写过文章，因为阅读或者其他的体验不太好，后面都没有坚持，玩过微信公众号，后面没坚持写。也开通了再后来就是简书，大概是19年的时候吧，因为简书发行代币，玩了一阵，还投了少许钱钱，中途撤了，还是小亏了一笔。<br>之后就没有在网络上写文章了。</p><h3 id="在这里生根发芽"><a href="#在这里生根发芽" class="headerlink" title="在这里生根发芽"></a>在这里生根发芽</h3><p>在这里立一个flag,每天都会写一写，看看1年会怎样，两年，三年呢？</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/21/hello-world/"/>
      <url>/2023/09/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-none"><code class="language-none"> bash$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 使用说明 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
